{"version":3,"sources":["components/Helpers.tsx","components/List.tsx","App.tsx","index.tsx"],"names":["goodsFromServer","renderList","goods","map","goodItem","List","useState","isClicked","setIsClicked","goodsList","setGoodsList","defaultLength","setDefaultLength","startButton","className","type","onClick","disabled","reverse","sort","goodItem1","goodItem2","localeCompare","sortedGoods","length","sortByLength","name","id","onChange","event","itemLength","target","value","filter","selected","lengthOption","React","memo","App","ReactDOM","render","document","getElementById"],"mappings":"gPAAaA,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAa,SAACC,GAAD,OACxBA,EAAMC,KAAI,SAAAC,GAAQ,OAChB,6BAEIA,GAFKA,OCRPC,EAAiB,WACrB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,YAAIN,IAA/C,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAqCMC,EAAcN,EAChB,KAEA,wBACEO,UAAU,oBACVC,KAAK,SACLC,QAAS,kBAAMR,GAAa,IAH9B,mBASJ,OACE,qCACE,oBAAIM,UAAU,aAAd,mBACCD,EACD,yBAASC,UAAU,oBAAnB,SACE,6BAEKP,GACEN,EAAWQ,OAKpB,uBACA,0BAASK,UAAU,UAAnB,UACE,wBACEG,UAAWV,EACXO,UAAU,iBACVC,KAAK,SACLC,QAAS,kBAnDAd,EAmDcO,EAlD7BC,EACE,YAAIR,GAAOgB,WAGNjB,EAAWQ,GALJ,IAACP,GA+CX,qBASA,wBACEe,UAAWV,EACXO,UAAU,iBACVC,KAAK,SACLC,QAAS,kBA3EWd,EA2EcO,EA1ExCC,EAAa,YAAIR,GAAOiB,MAAK,SAACC,EAAmBC,GAApB,OAC3BD,EAAUE,cAAcD,OAGnBpB,EAAWQ,GALO,IAACP,GAuEtB,iCASA,wBACEe,UAAWV,EACXO,UAAU,iBACVC,KAAK,SACLC,QAAS,kBA3EfN,EAAa,YAAIV,IACjBY,GAAiB,GAEVX,EAAWQ,IAoEd,mBASA,wBACEQ,UAAWV,EACXO,UAAU,iBACVC,KAAK,SACLC,QAAS,kBAtEI,SAACd,GACpB,IAAMqB,EAAc,YAAIrB,GAAOiB,MAAK,SAACC,EAAWC,GAAZ,OAClCD,EAAUI,OAASH,EAAUG,UAO/B,OAJAd,EACEa,GAGKtB,EAAWsB,GA6DGE,CAAahB,IAJ9B,4BASA,qBAAKK,UAAU,+BAAf,SACE,yBACEG,UAAWV,EACXmB,KAAK,gBACLC,GAAG,gBACHC,SACE,SAACC,GD9FoB,IAACC,EC+FpBpB,GD/FoBoB,GC+FcD,EAAME,OAAOC,MD9F7DhC,EAAgBiC,QAAO,SAAA7B,GAAQ,OAC7BA,EAASoB,QAAUM,OC8FPlB,GAAiB,IAPvB,UAWE,wBAAQoB,MAAM,IAAIE,SAAUvB,EAA5B,eAEE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACtBR,KAAI,SAAAgC,GAAY,OACf,wBAEEH,MAAOG,EAFT,SAIGA,GAHIA,kBAcVC,MAAMC,KAAKhC,GChIXiC,EARO,WACpB,OACE,qBAAKxB,UAAU,yBAAf,SACE,cAAC,EAAD,OCLNyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cb45a23d.chunk.js","sourcesContent":["export const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const renderList = (goods: string[]) => (\n  goods.map(goodItem => (\n    <li key={goodItem}>\n      {\n        goodItem\n      }\n    </li>\n  )));\n\nexport const filterGoodsByLength = (itemLength: number) => (\n  goodsFromServer.filter(goodItem => (\n    goodItem.length >= itemLength\n  )));\n","import React, { useState } from 'react';\nimport {\n  goodsFromServer,\n  renderList,\n  filterGoodsByLength,\n} from './Helpers';\n\nconst List: React.FC = () => {\n  const [isClicked, setIsClicked] = useState(false);\n  const [goodsList, setGoodsList] = useState([...goodsFromServer]);\n  const [defaultLength, setDefaultLength] = useState(true);\n\n  const sortAlphabetically = (goods: string[]) => {\n    setGoodsList([...goods].sort((goodItem1: string, goodItem2: string) => (\n      goodItem1.localeCompare(goodItem2)\n    )));\n\n    return renderList(goodsList);\n  };\n\n  const reset = () => {\n    setGoodsList([...goodsFromServer]);\n    setDefaultLength(true);\n\n    return renderList(goodsList);\n  };\n\n  const reverse = (goods: string[]) => {\n    setGoodsList(\n      [...goods].reverse(),\n    );\n\n    return renderList(goodsList);\n  };\n\n  const sortByLength = (goods: string[]) => {\n    const sortedGoods = [...goods].sort((goodItem1, goodItem2) => (\n      goodItem1.length - goodItem2.length\n    ));\n\n    setGoodsList(\n      sortedGoods,\n    );\n\n    return renderList(sortedGoods);\n  };\n\n  const startButton = isClicked\n    ? null\n    : (\n      <button\n        className=\"button is-primary\"\n        type=\"button\"\n        onClick={() => setIsClicked(true)}\n      >\n        Start\n      </button>\n    );\n\n  return (\n    <>\n      <h1 className=\"title is-1\">Goods</h1>\n      {startButton}\n      <article className=\"content is-medium\">\n        <ul>\n          {\n            (isClicked)\n            && renderList(goodsList)\n          }\n        </ul>\n      </article>\n\n      <hr />\n      <article className=\"buttons\">\n        <button\n          disabled={!isClicked}\n          className=\"button is-dark\"\n          type=\"button\"\n          onClick={() => reverse(goodsList)}\n        >\n          Reverse\n        </button>\n\n        <button\n          disabled={!isClicked}\n          className=\"button is-dark\"\n          type=\"button\"\n          onClick={() => sortAlphabetically(goodsList)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          disabled={!isClicked}\n          className=\"button is-dark\"\n          type=\"button\"\n          onClick={() => reset()}\n        >\n          Reset\n        </button>\n\n        <button\n          disabled={!isClicked}\n          className=\"button is-dark\"\n          type=\"button\"\n          onClick={() => sortByLength(goodsList)}\n        >\n          Sort by length\n        </button>\n\n        <div className=\"select is-rounded is-primary\">\n          <select\n            disabled={!isClicked}\n            name=\"filterOptions\"\n            id=\"filterOptions\"\n            onChange={\n              (event) => {\n                setGoodsList(filterGoodsByLength(+event.target.value));\n                setDefaultLength(false);\n              }\n            }\n          >\n            <option value=\"1\" selected={defaultLength}>1</option>\n            {\n              [2, 3, 4, 5, 6, 7, 8, 9, 10]\n                .map(lengthOption => (\n                  <option\n                    key={lengthOption}\n                    value={lengthOption}\n                  >\n                    {lengthOption}\n                  </option>\n                ))\n            }\n          </select>\n        </div>\n      </article>\n    </>\n  );\n};\n\nexport default React.memo(List);\n","import React from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.min.css';\nimport List from './components/List';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App container is-fluid\">\n      <List />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}