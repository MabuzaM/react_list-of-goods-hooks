{"version":3,"sources":["components/RenderList.tsx","App.tsx","index.tsx"],"names":["goodsFromServer","RenderList","goods","useState","isClicked","setIsClicked","goodsList","setGoodsList","length","setLength","renderList","map","goodItem","showOrHideButton","className","type","onClick","reverse","sort","goodItem1","goodItem2","localeCompare","sortAlphabetically","sortedGoods","sortByLength","name","id","onChange","event","parseInt","target","value","itemLength","filteredGoods","filter","filterGoodsByLength","React","memo","App","ReactDOM","render","document","getElementById"],"mappings":"gPAEMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAuB,WAC3B,IAsBkBC,EAtBlB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,mBAAS,GAAD,OAAKH,IAA/C,mBAAOM,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAa,SAACR,GAClB,OAAOA,EAAMS,KAAI,SAAAC,GAAQ,OACvB,6BAEIA,GAFKA,OA4DPC,EAAmBT,EACrB,KAEA,wBACEU,UAAU,oBACVC,KAAK,SACLC,QACE,WACEX,GAAa,IALnB,mBAaJ,OACE,qCACE,oBAAIS,UAAU,aAAd,mBACCD,EACD,yBAASC,UAAU,oBAAnB,SACE,8BAjEYZ,EAmECI,EAlEbF,EACKM,EAAWR,GAGb,UAmEL,uBACA,0BAASY,UAAU,UAAnB,UACE,wBACEA,UAAU,iBACVC,KAAK,SACLC,QAAS,YArED,SAACd,GACfK,EACE,YAAIL,GAAOe,WAGNP,EAAWJ,GAiEVW,CAAQX,IAJZ,qBAUA,wBACEQ,UAAU,iBACVC,KAAK,SACLC,QAAS,YAvEU,SAACd,GAC1BK,EAAa,YAAIL,GAAOgB,MAAK,SAACC,EAAmBC,GAApB,OAC3BD,EAAUE,cAAcD,OAGnBV,EAAWJ,GAmEVgB,CAAmBhB,IAJvB,iCAUA,wBACEQ,UAAU,iBACVC,KAAK,SACLC,QAAS,WAxEfP,EAAU,GAEVF,EAAa,GAAD,OAAKP,IAEVU,EAAWJ,IAiEd,mBAUA,wBACEQ,UAAU,iBACVC,KAAK,SACLC,QAAS,YA3EI,SAACd,GACpB,IAAMqB,EAAc,YAAIrB,GAAOgB,MAAK,SAACC,EAAWC,GAAZ,OAClCD,EAAUX,OAASY,EAAUZ,UAG/BD,EACEgB,GAGKb,EAAWa,GAmEVC,CAAalB,IAJjB,4BAUA,qBAAKQ,UAAU,+BAAf,SACE,yBACEW,KAAK,gBACLC,GAAG,gBACHC,SAAU,SAACC,GACTnB,GAAU,kBACRoB,SAASD,EAAME,OAAOC,MAAO,OAhIf,SAAC7B,EAAiB8B,GAC5C,IAAMC,EAAgB/B,EAAMgC,QAAO,SAAAtB,GAAQ,OACzCA,EAASJ,QAAUwB,KAGdtB,EAAWuB,GA6HRE,CAAoB7B,EAAWE,IAPnC,UAUE,wBAAQuB,MAAOvB,EAAf,eACA,wBAAQuB,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,4BAQGK,MAAMC,KAAKpC,GCvKXqC,EARO,WACpB,OACE,qBAAKxB,UAAU,yBAAf,SACE,cAAC,EAAD,OCLNyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0c806426.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst RenderList: React.FC = () => {\n  const [isClicked, setIsClicked] = useState(false);\n  const [goodsList, setGoodsList] = useState([...goodsFromServer]);\n  const [length, setLength] = useState(1);\n\n  const renderList = (goods: string[]) => {\n    return goods.map(goodItem => (\n      <li key={goodItem}>\n        {\n          goodItem\n        }\n      </li>\n    ));\n  };\n\n  const filterGoodsByLength = (goods: string[], itemLength: number) => {\n    const filteredGoods = goods.filter(goodItem => (\n      goodItem.length >= itemLength\n    ));\n\n    return renderList(filteredGoods);\n  };\n\n  const showList = (goods: string[]) => {\n    if (isClicked) {\n      return renderList(goods);\n    }\n\n    return null;\n  };\n\n  const reverse = (goods: string[]) => {\n    setGoodsList(\n      [...goods].reverse(),\n    );\n\n    return renderList(goodsList);\n  };\n\n  const sortAlphabetically = (goods: string[]) => {\n    setGoodsList([...goods].sort((goodItem1: string, goodItem2: string) => (\n      goodItem1.localeCompare(goodItem2)\n    )));\n\n    return renderList(goodsList);\n  };\n\n  const reset = () => {\n    setLength(1);\n\n    setGoodsList([...goodsFromServer]);\n\n    return renderList(goodsList);\n  };\n\n  const sortByLength = (goods: string[]) => {\n    const sortedGoods = [...goods].sort((goodItem1, goodItem2) => (\n      goodItem1.length - goodItem2.length\n    ));\n\n    setGoodsList(\n      sortedGoods,\n    );\n\n    return renderList(sortedGoods);\n  };\n\n  const showOrHideButton = isClicked\n    ? null\n    : (\n      <button\n        className=\"button is-primary\"\n        type=\"button\"\n        onClick={\n          () => {\n            setIsClicked(true);\n          }\n        }\n      >\n        Start\n      </button>\n    );\n\n  return (\n    <>\n      <h1 className=\"title is-1\">Goods</h1>\n      {showOrHideButton}\n      <article className=\"content is-medium\">\n        <ul>\n          {\n            showList(goodsList)\n          }\n        </ul>\n      </article>\n\n      <hr />\n      <article className=\"buttons\">\n        <button\n          className=\"button is-dark\"\n          type=\"button\"\n          onClick={() => {\n            reverse(goodsList);\n          }}\n        >\n          Reverse\n        </button>\n\n        <button\n          className=\"button is-dark\"\n          type=\"button\"\n          onClick={() => {\n            sortAlphabetically(goodsList);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className=\"button is-dark\"\n          type=\"button\"\n          onClick={() => {\n            reset();\n          }}\n        >\n          Reset\n        </button>\n\n        <button\n          className=\"button is-dark\"\n          type=\"button\"\n          onClick={() => {\n            sortByLength(goodsList);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <div className=\"select is-rounded is-primary\">\n          <select\n            name=\"filterOptions\"\n            id=\"filterOptions\"\n            onChange={(event) => {\n              setLength(() => (\n                parseInt(event.target.value, 10)));\n\n              filterGoodsByLength(goodsList, length);\n            }}\n          >\n            <option value={length}>1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n            <option value=\"6\">6</option>\n            <option value=\"7\">7</option>\n            <option value=\"8\">8</option>\n            <option value=\"9\">9</option>\n            <option value=\"10\">10</option>\n          </select>\n        </div>\n      </article>\n    </>\n  );\n};\n\nexport default React.memo(RenderList);\n","import React from 'react';\nimport './App.css';\nimport 'bulma/css/bulma.min.css';\nimport RenderList from './components/RenderList';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App container is-fluid\">\n      <RenderList />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}